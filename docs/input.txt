1 Introduction
2 Basic Concepts
2.1 Values and Types
2.2 Environments and the Global Environment
2.3 Error Handling
2.4 Metatables and Metamethods
2.5 Garbage Collection
2.5.1 Incremental Garbage Collection
2.5.2 Generational Garbage Collection
2.5.3 Garbage-Collection Metamethods
2.5.4 Weak Tables
2.6 Coroutines
3 The Language
3.1 Lexical Conventions
3.2 Variables
3.3 Statements
3.3.1 Blocks
3.3.2 Chunks
3.3.3 Assignment
3.3.4 Control Structures
3.3.5 For Statement
3.3.6 Function Calls as Statements
3.3.7 Local Declarations
3.3.8 To-be-closed Variables
3.4 Expressions
3.4.1 Arithmetic Operators
3.4.2 Bitwise Operators
3.4.3 Coercions and Conversions
3.4.4 Relational Operators
3.4.5 Logical Operators
3.4.6 Concatenation
3.4.7 The Length Operator
3.4.8 Precedence
3.4.9 Table Constructors
3.4.10 Function Calls
3.4.11 Function Definitions
3.5 Visibility Rules
4 The Application Program Interface
4.1 The Stack
4.1.1 Stack Size
4.1.2 Valid and Acceptable Indices
4.1.3 Pointers to strings
4.2 C Closures
4.3 Registry
4.4 Error Handling in C
4.4.1 Status Codes
4.5 Handling Yields in C
4.6 Functions and Types
4.7 The Debug Interface
5 The Auxiliary Library
5.1 Functions and Types
6 The Standard Libraries
6.1 Basic Functions
6.2 Coroutine Manipulation
6.3 Modules
6.4 String Manipulation
6.4.1 Patterns
6.4.2 Format Strings for Pack and Unpack
6.5 UTF-8 Support
6.6 Table Manipulation
6.7 Mathematical Functions
6.8 Input and Output Facilities
6.9 Operating System Facilities
6.10 The Debug Library
7 Lua Standalone
8 Incompatibilities with the Previous Version
8.1 Incompatibilities in the Language
8.2 Incompatibilities in the Libraries
8.3 Incompatibilities in the API
9 The Complete Syntax of Lua
